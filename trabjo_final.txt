Trabajo final _individual_
--------------------------

Fecha de límite de entrega: 30 de mayo inclusive.
Defensa: 6 de junio.


Desarrollar un programa script de Bash que realiza una serie de verificaciones
al sistema. Las verificaciones (o chequeos) son detalladas al final de este
enunciado.

El script debe tener dos modos de funcionamiento :

  - Completo : realiza todas las verificaciones.
  - Selectivo : realiza sólo algunas verificaciones de acuerdo a las
                opciones que el usuario selecciona, utilizando argumentos,
                en su ejecución.

Es decir, si el usuario ejecuta este programa sin opciones selectivas
se deben realizar todas las verificaciones posibles.


Opciones
--------

 -h --help 
	Muestra una descripción de la funcionalidad del script y las 
        opciones soportadas. 

 -l archivo 
	Permite especificar un archivo de salida. En lugar de enviar
	el reporte a la salida estándar se debe guardar el reporte
	en el archivo de salida.

 Opciones de selección de chequeos :

 -m 
	Verificación de la memoria del sistema.	

 -c
	Verificación del uso de CPU.

 -n
	Verificación de la red del sistema.

 -d
	Verificación del uso del disco del sistema.

 -u
	Verificación de los usuarios del sistema.

 -f
	Verificación de los sistemas de archivos.

 -d
	Verificación de la configuación DNS.

 -t
	Verificación del servicio NTP.
 
   
Ejemplos de uso
---------------

system_check.sh
	
	El usuario ejecuta el script y este realiza todos los chequeos.
	
system_check.sh -m -d -l /tmp/reporte.txt
	
	El usuario ejecuta el script para realizar los chequeos de memoria y
	disco del sistema. La salida reporte es almacenada en el archivo
	/tmp/reporte.txt



Formato de la salida del reporte
--------------------------------

Encabezado: 

####################################
hostname: <nombre del sistema> 
Fecha y Hora:
####################################


Por chequeo (cuerpo del reporte) : 

Cada chequeo debe presentar el siguiente formato de 
salida (de éxito, error, advertencia o información) :

Chequeo: <nombre del chequeo>

*** EXITO:       mensaje
*** ERROR:       mensaje
*** ADVERTENCIA: mensaje
*** INFO: 	 mensaje 

El mensaje "INFO" debe estar presente siempre, al final de cada chequeo.
Los demás mensajes pueden estar o no, dependiendo del chequeo (no todos
los chequeos necesariamente pueden contener errores de verificación, o
advertencias). El mensaje INFO puede ser utilizado para mostrar información 
adicional a los mensajes de ERROR, EXITO y ADVERTENCIA que considere apropiados.

	
Resumen de ejecución (al final del reporte) :

########################################
RESUMEN
########################################

Total chequeos: <numero total de chequeos>
Total exito: <numero de mensajes EXITO>
Total errores: <numero de mensajes ERROR>
Total advertencias: <numero de mensajes ADVERTENCIA>


Usuarios
--------

Si el usuario no es root deberá mostrar una advertencia de salida reducida y
las salidas de aquellos chequeos para los cuales no hace falta ser root (ej. 
la verificación del servicio de NTP). Caso contrario deberá ejecutar todos los
chequeos posibles.


Verificaciones
--------------

1) Memoria:
 - Verificar cuanta memoria RAM tiene el sistema, cuanta en uso y cuanta libre.
   Reportar una advertencia si la memoria en uso supera el 95% del total 
   disponible.
 - Mostrar los 5 procesos que mas memoria RAM utilizan (de memoria 
   residente, no virtual). 

2) CPU:
 - Verificar el uso de CPU. Cuánto se está utilizando para procesos, cuánto
   para el sistema, cuánta espera hay de E/S, y cuánto % de CPU hay disponible.
 - Mostrar los 5 procesos que más CPU están utilizando.

3) Red:
 - Mostrar la configuración de las placas de red del sistema. Velocidad 
   (100Mbit/s,1Gbit/s, Full duplex, half duplex).
 - Verificar el uso del ancho de banda de la red. Cuánto está en uso y cuanto
   libre.
 - Mostrar los 5 procesos que más ancho de banda de la red están utilizando.

4) Disco :
  - Mostrar la configuración del disco principal del sistema y del sistema
    de archivo raíz.
  - Mostrar los 5 procesos que mas E/S están realizando a disco.

5) Usuarios:
 - Verificar que todos los usuarios presentes en passwd se encuentren en 
   shadow y que el número de líneas de ambos coincidan. EXITO si se cumplen
   ambos condiciones, ERROR en caso contrario.  

6) Sistemas de archivos: 
 - Verificar si todos los sistemas de archivos listados en /etc/fstab se
   encuentran montados. 
 - Si todos están montados, entonces EXITO. 
 - Si alguno no se encuentra montado entonces ERROR.

7) DNS: 
 -  Si existen servidores de nombre (DNS) definidos, entonces verificar que
    funcionan correctamente. Si no existe ninguno definido emitir una
    ADVERTENCIA. 
    Si están definidos y funcionan correctamente EXITO, caso contrario ERROR. 

8) Servicio de ntp:
 - Verificar si el servicio de ntp esta siendo ejecutando, si no lo está
   entonces reportar como ADVERTENCIA.  
 - Si está siendo ejecutado y está sincronizando entonces EXITO, caso 
   contrario ERROR.


NOTA: si utiliza algún software especial que pueda no estar instalado con 
frecuencia, verifique que el mismo está presente antes de utilizarlo, caso 
contrario reporte el problema y termine la ejecución del chequeo. 

OPCIONAL: escriba la página man de su programa. ¿En qué sección del manual la 
agregaría? Instale su programa tal que este disponible para cualquier usuario
y tal que su página man aparezca al ejecutar man lin_sys.sh  


Recomendaciones
---------------

Un diseño recomendado es desarrollar cada chequeo en funciones diferentes.
De esta manera, si sólo algunos chequeos deben ser realizados, sólo
se necesita llamar a las funciones correspondientes.

Realizar un programa básico que únicamente interprete los argumentos del usuario
puede servir como esqueleto de programa.

Es preferible un programa que haga unas pocas verificaciones bien que
realizar la entrega de este trabajo de manera completa pero con muchos errores
o problemas (bugs).


Qué entregar
------------

Enviar el trabajo en un archivo tar.gz, por correo a
rafa@fi.uncoma.edu.ar y mtl@fi.uncoma.edu.ar

El paquete tar.gz debe contener el script desarrollado y, 
al menos, la documentación necesaria (preferentemente un archivo
de texto sin formato) con todas las consideraciones que crean necesarias.

Por ejemplo, deben detallar cómo debemos ejecutar el script
entregado.
